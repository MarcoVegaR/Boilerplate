import { useMemo, useState } from 'react';
import { Head } from '@inertiajs/react';
import { Button } from '@/components/ui/button';
import { DataTable } from '@/components/ui/data-table';
import { Input } from '@/components/ui/input';
import AdminLayout from '@/components/ui/admin-layout';
import { router } from '@inertiajs/react';

export default function Index({ items, filters }) {
  const [search, setSearch] = useState(filters.search || '');
  
  const columns = useMemo(() => [
    {
      header: 'ID',
      accessorKey: 'id',
    },
    // Add your columns here
    {
      header: 'Name',
      accessorKey: 'name',
    },
    {
      header: 'Status',
      accessorKey: 'is_active',
      cell: ({ row }) => (
        <span className={`px-2.5 py-1 rounded-full text-xs font-medium ${row.original.is_active ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'}`}>
          {row.original.is_active ? 'Active' : 'Inactive'}
        </span>
      ),
    },
    {
      header: 'Actions',
      cell: ({ row }) => (
        <div className="flex space-x-2">
          <Button
            size="sm"
            variant="outline"
            onClick={() => router.visit(route('{{ routePrefix }}.edit', row.original.id))}
          >
            Edit
          </Button>
          <Button
            size="sm"
            variant="destructive"
            onClick={() => {
              if (confirm('Are you sure you want to delete this item?')) {
                router.delete(route('{{ routePrefix }}.destroy', row.original.id));
              }
            }}
          >
            Delete
          </Button>
        </div>
      ),
    },
  ], []);

  const handleSearch = (e) => {
    setSearch(e.target.value);
    router.get(
      route('{{ routePrefix }}.index'),
      { search: e.target.value },
      { preserveState: true, replace: true }
    );
  };

  return (
    <AdminLayout>
      <Head title="{{ title }} Management" />
      <div className="py-12">
        <div className="max-w-7xl mx-auto sm:px-6 lg:px-8">
          <div className="bg-white overflow-hidden shadow-sm sm:rounded-lg">
            <div className="p-6 bg-white border-b border-gray-200">
              <div className="flex justify-between items-center mb-6">
                <h1 className="text-2xl font-semibold">{{ title }} Management</h1>
                <Button onClick={() => router.visit(route('{{ routePrefix }}.create'))}>
                  Create {{ title }}
                </Button>
              </div>
              
              <div className="mb-4">
                <Input
                  type="text"
                  placeholder="Search..."
                  value={search}
                  onChange={handleSearch}
                  className="max-w-xs"
                />
              </div>
              
              <DataTable
                columns={columns}
                data={items.data}
                pagination={{
                  pageIndex: items.current_page - 1,
                  pageCount: items.last_page,
                }}
                onPaginationChange={({ pageIndex }) => {
                  router.get(
                    route('{{ routePrefix }}.index', { page: pageIndex + 1, search }),
                    {},
                    { preserveState: true, replace: true }
                  );
                }}
              />
            </div>
          </div>
        </div>
      </div>
    </AdminLayout>
  );
}
